import Head from 'next/head'
import Image from 'next/image'
import React, { useState } from "react";
import Layout from '@/components/layouts/Layout';
import { Form, Row } from 'react-bootstrap';
import DummyUser from '@/public/images/dummy_user.png';
import Quote from '@/public/images/quote.png';
import Toaster from '@/components/common/Toaster';
import axios from 'axios';
import { useRouter } from 'next/router';

export default function Courses() {
  const router = useRouter();
  const [name, setName] = useState('');
  const [email, setEmail] = useState('');
  const [phone, setPhone] = useState('+880');
  const [grade, setGrade] = useState('');
  const [schedule, setSchedule] = useState('');
  const [scheduleDate, setScheduleDate] = useState('');
  const [note, setNote] = useState('');
  const [validated, setValidated] = useState(false);
  const freeClassRequest = (e) => {
    axios
      .post("request-free-class", { name:name, email:email, phone:phone, grade:grade, schedule:schedule, scheduleDate:scheduleDate, note:note })
      .then(function (resp) {
        console.log(resp.data);
        if(resp.data.success){
          Toaster('Free Class Requested Successfully', 'success');
          // redirect("/login","replace");
          router.push("/");
        }
      })
      .catch((err) => {
        console.log(err);
        Toaster('Something went wrong', 'error');
      });
    setValidated(true);
    e.preventDefault();
  }
  return (
    <>
      <Head>
        <title>Progobees | Free Class Request</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        <div className='login_container mt-4'>
          <Row>
            <div className='col-12 order-2 col-md-6 order-md-1 user_review'>
              <div className="card coding_course_card">
                <div className="card-body">
                  <Image className='img-fluid' src={Quote} alt='quote' />
                  <p className="ms-3 card-text">
                    The customisable courses at Progobees give my child a real advantage: academically, socially, and in technology. Highly recommended!
                  </p>
                  <Row>
                    <div className='col-4 ms-4 pe-0'>
                      <Image className='img-fluid' src={DummyUser} width={128} height={128} alt='user' />
                    </div>
                    <div className='col-7 user_details ps-0'>
                      <p className='user_name'>Jisun Abedin
                        <br />
                        <span style={{ fontWeight: 400 }}>Parent</span>
                      </p>
                    </div>
                  </Row>
                </div>
              </div>
            </div>
            <div className='col-12 order-1 col-md-6 order-md-2'>
              <h3>Let&apos;s Get Started</h3>
              <Form noValidate validated={validated} onSubmit={(e) => { freeClassRequest(e); }}>
                <Form.Group className="mb-3" controlId="name">
                  <Form.Label>Name</Form.Label>
                  <Form.Control type="text" placeholder="Your name" value={name} onChange={(e) => setName(e.target.value)} required />
                  <Form.Control.Feedback type="invalid">Name is required</Form.Control.Feedback>
                </Form.Group>
                <Form.Group className="mb-3" controlId="email">
                  <Form.Label>Email</Form.Label>
                  <Form.Control type="email" placeholder="name@example.com" value={email} onChange={(e) => setEmail(e.target.value)} />
                  <Form.Control.Feedback type="invalid">Please type valid email</Form.Control.Feedback>
                </Form.Group>
                <Form.Group className="mb-3" controlId="phone">
                  <Form.Label>Phone</Form.Label>
                  <Form.Control type="tel" placeholder="01xxxxxxxxx" value={phone} onChange={(e) => setPhone(e.target.value)} required />
                  <Form.Control.Feedback type="invalid">Please type valid phone number</Form.Control.Feedback>
                </Form.Group>
                <Form.Group className="mb-3" controlId="grade">
                  <Form.Select aria-label="Choose Grade" value={grade} onChange={(e) => setGrade(e.target.value)} required>
                    <option readOnly value=''>Choose Grade</option>
                    <option value="grade-1-3">Grade 1-3</option>
                    <option value="grade-4-6">Grade 4-6</option>
                    <option value="grade-7-9">Grade 7-9</option>
                    <option value="grade-10-12">Grade 10-12</option>
                  </Form.Select>
                  <Form.Control.Feedback type="invalid">Please select a grade</Form.Control.Feedback>
                </Form.Group>
                <Form.Group className="mb-3" controlId="date" value={scheduleDate} onChange={(e) => setScheduleDate(e.target.value)} required>
                  <Form.Label>Pick a date for the class</Form.Label>
                  <Form.Control type="date" placeholder="name@example.com" />
                  <Form.Control.Feedback type="invalid">Please select a date</Form.Control.Feedback>
                </Form.Group>

                <Form.Group controlId="schedule">
                  <Form.Select aria-label="Choose Schedule" value={schedule} onChange={(e) => setSchedule(e.target.value)} required>
                    <option readOnly value=''>Choose Schedule</option>
                    <option value="9-am-12-pm">Between 9 AM to 12 PM</option>
                    <option value="12-pm-2-pm">Between 12 PM to 2 PM</option>
                    <option value="2-pm-4-pm">Between 2 PM to 4 PM</option>
                    <option value="4-pm-6-pm">Between 4 PM to 6 PM</option>
                    <option value="6-pm-8-pm">Between 6 PM to 8 PM</option>
                    <option value="8-pm-10-pm">Between 8 PM to 10 PM</option>
                    <option value="10-pm-11:59-pm">Between 10 PM to 11:59 PM</option>
                    <option value="12-am-2-am">Between 12 AM to 2 AM</option>
                  </Form.Select>
                  <Form.Control.Feedback type="invalid">Please select a schedule</Form.Control.Feedback>
                </Form.Group>

                <Form.Group className="mb-3" controlId="message" value={note} onChange={(e) => setNote(e.target.value)}>
                  <Form.Label>If you have any request or want to know something write bellow</Form.Label>
                  <Form.Control as="textarea" rows={3} />
                </Form.Group>
                <button className='btn btn-primary pgb_btn ms-1 me-1' type='submit' onClick={() => <Toaster type='success' message='ggwp' />}>Create Request</button>
              </Form>
            </div>
          </Row>
        </div>
      </Layout>
    </>
  )
}
